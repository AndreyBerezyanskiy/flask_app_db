"""relation between todo and user was added

Revision ID: c7b3499de3aa
Revises: 40d234f26e8f
Create Date: 2023-06-06 17:17:29.418093

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "c7b3499de3aa"
down_revision = "40d234f26e8f"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "todo",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=128), nullable=True),
        sa.Column("is_done", sa.Boolean(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.alter_column("username", existing_type=sa.VARCHAR(length=128))
        #  nullable=False)
        batch_op.alter_column(
            "password", existing_type=sa.VARCHAR(length=64), nullable=False
        )
        batch_op.create_unique_constraint(None, ["username"])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="unique")
        batch_op.alter_column(
            "password", existing_type=sa.VARCHAR(length=64), nullable=True
        )
        batch_op.alter_column(
            "username", existing_type=sa.VARCHAR(length=128), nullable=True
        )

    op.drop_table("todo")
    # ### end Alembic commands ###
